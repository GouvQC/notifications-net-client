name: Trivy Scan

on:
  push:
    branches: ["*"]
  # pull_request:
  #   branches: ["*"]
  workflow_dispatch:

jobs:
  docker-scan:
    name: Scan de sécurité Trivy (Docker image)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t notifications-net-client .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: notifications-net-client
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  filesystem-scan:
    name: Scan de sécurité Trivy (filesystem via SBOM)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CycloneDX CLI
        run: dotnet tool install CycloneDX --tool-path cyclonedx-tools

      - name: Add CycloneDX to PATH
        run: echo "${{ github.workspace }}/cyclonedx-tools" >> $GITHUB_PATH

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore and Build the solution
        run: |
          dotnet restore PgnNotifications.Client.sln
          dotnet build PgnNotifications.Client.sln -c Release

      - name: Generate SBOM with CycloneDX
        run: cyclonedx dotnet -p ./PgnNotifications.Client.sln -o sbom.xml

      - name: Scan SBOM with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: sbom
          scan-ref: sbom.xml
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

